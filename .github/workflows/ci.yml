name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_PASSWORD: development_secure_2024
          POSTGRES_DB: solicitor_brain_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup environment
      run: |
        cp .env.example .env
        echo "DATABASE_URL=postgresql://postgres:development_secure_2024@localhost:5432/solicitor_brain_test" >> .env
        echo "REDIS_URL=redis://localhost:6379" >> .env
        echo "JWT_SECRET=test-secret-key" >> .env
        echo "ENABLE_AI_FEATURES=false" >> .env
    
    - name: Run database migrations
      run: |
        npm run db:setup
        npm run db:seed
    
    - name: Run unit tests
      run: npm test
    
    - name: Install Playwright
      run: npx playwright install --with-deps
    
    - name: Start server and run E2E tests
      run: |
        npm run dev &
        sleep 10
        npm run e2e
      env:
        PORT: 3333

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Run ESLint
      run: npm run lint
    - name: Run TypeScript check
      run: npm run typecheck
