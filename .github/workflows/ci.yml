name: CI

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  policy-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check for policy.yml
        run: |
          if [ ! -f policy.yml ]; then
            echo "❌ ERROR: policy.yml file is missing"
            echo "Policy enforcement is required for all code changes"
            exit 1
          fi
          echo "✅ policy.yml found"

      - name: Check for untracked files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "❌ ERROR: Untracked files detected"
            git status --porcelain
            exit 1
          fi
          echo "✅ No untracked files detected"

      - name: Validate policy.yml format
        run: |
          if ! command -v yq &> /dev/null; then
            wget -qO /tmp/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
            chmod +x /tmp/yq
            /tmp/yq eval . policy.yml > /dev/null || (echo "❌ Invalid YAML in policy.yml" && exit 1)
          fi
          echo "✅ policy.yml is valid YAML"

  security-scan:
    runs-on: ubuntu-latest
    needs: policy-check
    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  lint-build-test:
    runs-on: ubuntu-latest
    needs: policy-check
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Audit dependencies
        run: |
          echo "🔍 Running dependency audit..."
          npm audit --audit-level high || true
          echo "Note: Audit failures won't block CI but should be reviewed"

      - name: Lint
        run: npm run lint

      - name: Typecheck
        run: npm run typecheck

      - name: Unit tests
        run: npm test -- --runInBand --coverage

      - name: Build
        run: npm run build

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [policy-check, lint-build-test]
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: solicitor
          POSTGRES_PASSWORD: development_secure_2024
          POSTGRES_DB: solicitor_brain_v2
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup database
        env:
          DATABASE_URL: postgresql://solicitor:development_secure_2024@localhost:5432/solicitor_brain_v2
        run: |
          npm run db:push
          npm run db:seed

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run E2E tests
        env:
          DATABASE_URL: postgresql://solicitor:development_secure_2024@localhost:5432/solicitor_brain_v2
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-jwt-secret-for-ci
          ENABLE_AI_FEATURES: false
        run: npm run e2e

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
